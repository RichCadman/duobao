function bglogLoadEvent(func) { var oldonload = window.onload; if (typeof window.onload != 'function') { window.onload = func } else { window.onload = function () { oldonload(); func() } } } function bglogexec() { var channelLog = { domain: "bglog.bitauto.com", bglogId: "", DC: null, SendLog: function (id, name) { var userguid = this.Methods.Cookie.getCookie("UserGuid"); var e = this; if (userguid.length > 0) { e.WriteLog(id, name) } else { this.Methods.GetbglogId().done(function () { e.WriteLog(id, name) }) } }, WriteLog: function (id, name) { var url = "http://" + this.domain + "/bglog.gif?"; try { var bglog = this.Methods.Cookie.getCookie("UserGuid"); this.DC = this.Methods.DCInit(); if (typeof (id) != "undefined" && typeof (name) != "undefined") { if (id && name) { url += "&u=" + id + "," + name } } url += "&b=" + bglog; for (var n in this.DC) { if (this.DC[n]) { url += "&" + n + "=" + this.Methods.Escape(this.DC[n], this.Methods.RE) } } if (typeof (ChannelLOGCollector) != "undefined") { for (var i in ChannelLOGCollector) { if (ChannelLOGCollector[i]) { url += "&" + i + "=" + this.Methods.Escape(ChannelLOGCollector[i], this.Methods.RE) } } } if (url.length > 2048 && navigator.userAgent.indexOf("MSIE") >= 0) { url = url.substring(0, 2042) + "&sub=1" } (new Image()).src = url + "&logts=" + (new Date()).getTime() } catch (e) { } }, Methods: { DCInit: function () { var dc = new Object(); var ref = window.document.referrer; if ((ref != "") && (ref != "-")) { dc.ref = this.Encode(ref) } var href = document.URL || window.document.URL; dc.url = this.Encode(href); dc.brw = navigator.userAgent; dc.appV = navigator.appVersion; return dc }, GetbglogId: function () { var deferred = $.Deferred(); var syncUrlArr = ['api.i.yiche.com', 'api.i.bitauto.com', 'api.i.cheyisou.com']; var rootdomin = document.domain.split('.').slice(-2).join('.'); function removeByValue() { for (var i = 0; i < syncUrlArr.length; i++) { if (syncUrlArr[i].indexOf(rootdomin) > -1) { syncUrlArr.splice(i, 1); break } } } function syncUserGuidCookie() { var userguid = channelLog.Methods.Cookie.getCookie("UserGuid"); var syncDef = []; $.each(syncUrlArr, function (i, syncUrl) { syncDef.push($.getScript("http://" + syncUrl + "/clientApi/UserTraceCookie?key=UserGuid&val=" + userguid)) }); $.when(syncDef).done(function () { deferred.resolve() }) } function createSyncCookieUrl() { $.getScript("http://api.i." + rootdomin + "/clientApi/UserTraceCookie").done(syncUserGuidCookie) } removeByValue(); createSyncCookieUrl(); setTimeout(function () { deferred.reject() }, 3000); return deferred.promise() }, RE: { "%09": /\t/g, "%20": / /g, "%23": /\#/g, "%26": /\&/g, "%2B": /\+/g, "%3F": /\?/g, "%5C": /\\/g, "%22": /\"/g, "%7F": /\x7F/g, "%A0": /\xA0/g }, Encode: function (s) { return (typeof (encodeURIComponent) == "function") ? encodeURIComponent(s) : escape(s) }, Escape: function (s, rel) { if (window.RegExp && typeof (rel) != "undefined") { var retStr = new String(s); for (var r in rel) { retStr = retStr.replace(rel[r], r) } return retStr } else { return escape(s) } }, guidGenerator: function () { var a = function () { return (((1 + Math.random()) * 65536) | 0).toString(16).substring(1) }; return (a() + a() + "-" + a() + "-" + a() + "-" + a() + "-" + a() + a() + a()) }, Cookie: { setCookie: function (name, value, expires, path, domain) { var content = name + "=" + encodeURIComponent(value); if (typeof (expires) !== "undefined" && !!expires) { var expiryday = new Date(); var e = expires * 3600 * 1000; expiryday.setTime(expiryday.getTime() + e); content += "; expires=" + expiryday.toGMTString() } (!path && (path = "/")); (!domain && (domain = document.domain)); content += ";path=" + path + ";domain=" + domain; document.cookie = content }, getCookie: function (name) { var arr = document.cookie.match(new RegExp("(^| )" + name + "=([^;]*)(;|$)")); if (arr != null) { return unescape(arr[2]) } return "" }, clearCookie: function (name, path, domain) { if (this.getCookie(name)) { document.cookie = name + "=" + ((path) ? "; path=" + path : "; path=/") + ";expires=Fri, 02-Jan-1970 00:00:00 GMT" } } } } }; if (typeof (Bitauto) != "undefined" && !!Bitauto && typeof (Bitauto.Login) != "undefined" && !!Bitauto.Login) { Bitauto.Login.onComplatedHandlers.add("memory once", function (loginResult) { if (loginResult.isLogined) { channelLog.SendLog(loginResult.userId, loginResult.userName) } else { channelLog.SendLog() } }) } else { channelLog.SendLog() } } bglogLoadEvent(bglogexec);